{"version":3,"sources":["DisplayCartSummary.js","redux/Shopping/shopping-types.js","redux/Shopping/shopping-reducers.js","redux/Shopping/shopping-selectors.js","redux/Shopping/shopping-actions.js","redux/rootReducer.js","redux/store.js","calculateTotal.js","Tile.js","addingProduct.js","HowManyInTheCart.js","App.js","reportWebVitals.js","index.js"],"names":["connect","state","params","shop","cart","console","log","checkOutCart","className","map","el","description","active","price","ADD_TO_CART","REMOVER_FROM_CART","addThistocart","itemId","type","actionTypes","payload","obj","INITIAL_STATE","product","id","name","link","shopReducer","action","present_cart","i","length","quantity","push","current_cart","filter","rootReducer","combineReducers","store","createStore","composeWithDevTools","currentTotal","props","doTheMath","bind","total","this","inTheCart","forEach","element","React","Component","items","cart_contents","useDispatch","useState","listOfItems","setlistOfItems","useEffect","a","axios","result","data","whichButton","flag","onClick","dispatch","src","imglink","width","height","tot","whatIsTotal","to","pathname","AddingProductToList","totalItems","method","class","for","App","path","component","exact","Shop","displayCart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64817fdc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst displayCart=(params)=>{\r\n\r\n    // console.log(params.location.props);\r\n\r\n    // const checkOutCart=params.location.props;\r\n    console.log(params);\r\n    // console.log(params.location.props);\r\n\r\n    const checkOutCart=params.params;\r\n    console.log(checkOutCart);\r\n\r\n    let tot=0;\r\n    return (<div className=\"CARTLOOKSLIKE\">\r\n        <h1>Current Cart Contents</h1>\r\n        {checkOutCart.map((el) => (\r\n            <div className=\"CheckOut\">\r\n                <h3>Item description : {el.description}</h3>\r\n                <h3>Contribution : {el.active}*{el.price} = {el.active * el.price}</h3>\r\n            </div>\r\n        ))\r\n        }\r\n    </div>)\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        params:state.shop.cart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(displayCart);","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVER_FROM_CART=\"REMOVER_FROM_CART\";\r\n","import * as actionTypes from './shopping-types';\r\n\r\nexport const addThistocart=(itemId)=>{\r\n    return {\r\n        type:actionTypes.ADD_TO_CART,\r\n        payload:{\r\n            obj:itemId\r\n        }\r\n    };\r\n};\r\n\r\nexport const removeThisFromCart = (itemId)=>{\r\n    return {\r\n        type:actionTypes.REMOVER_FROM_CART,\r\n        payload:{\r\n            id:itemId\r\n        }\r\n    };\r\n};","export const INITIAL_STATE={\r\n    product:[{\r\n        id:1,\r\n        name:\"Prod 1\",\r\n        price:100000,\r\n        link:'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8cHJvZHVjdHxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&w=1000&q=80',\r\n        description:\" HEADPHONES\",\r\n        active:0\r\n    },\r\n    {\r\n        id:2,\r\n        name:\"Prod 2\",\r\n        price:2000,\r\n        link:'https://images.unsplash.com/photo-1523275335684-37898b6baf30?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cHJvZHVjdHxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&w=1000&q=80',\r\n        description:\"WATCH\",\r\n        active:0\r\n    },\r\n    {\r\n        id:3,\r\n        name:\"Prod 3\",\r\n        price:3000,\r\n        link:'https://images.unsplash.com/photo-1564466809058-bf4114d55352?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&q=80',\r\n        description:\"CAMERA\",\r\n        active:0\r\n    },\r\n    {\r\n        id:4,\r\n        name:\"Prod 4\",\r\n        price:4000,\r\n        link:'https://petapixel.com/assets/uploads/2017/03/product1.jpeg',\r\n        description:\"SHOES\",\r\n        active:0\r\n    },\r\n    {\r\n        id:5,\r\n        name:\"Prod 5\",\r\n        price:5000,\r\n        link:'https://www.gizbot.com/images/2020-09/realme-7_159921061900.jpg',\r\n        description:\"PHONE\",\r\n        active:0\r\n    },\r\n    {\r\n        id:6,\r\n        name:\"Prod 6\",\r\n        price:6000,\r\n        link:'https://www.kvstech.com/img/service/product.jpg',\r\n        description:\"CUBE\",\r\n        active:0\r\n    }],\r\n    \r\n    cart:[]\r\n    // currentItem:null\r\n};","import * as actionTypes from './shopping-types';\r\nimport {INITIAL_STATE} from './shopping-selectors.js'\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst shopReducer = (state,action) =>{\r\n    console.log(\"IN THE SHOP REDUCER, THE CURRENT STATE IS\");\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            console.log(\"ADDING TO CART \");\r\n            // console.log(action.payload.obj);\r\n\r\n            let present_cart = state.cart;\r\n\r\n            for (let i = 0; i < present_cart.length; i++) {\r\n                if (present_cart[i].id === action.payload.obj.id) {\r\n                    present_cart[i].quantity = present_cart[i].quantity + 1;\r\n                    console.log(present_cart);\r\n                    return { ...state, cart: present_cart };\r\n                }\r\n            }\r\n\r\n            present_cart.push(action.payload.obj);\r\n            action.payload.obj.quantity = 1;\r\n            console.log(present_cart);\r\n\r\n            return { ...state, cart: present_cart };\r\n\r\n\r\n        case actionTypes.REMOVER_FROM_CART:\r\n\r\n            let current_cart = state.cart;\r\n\r\n            current_cart = current_cart.filter(el => {\r\n                if (el.id === action.payload.id) {\r\n                    if (el.quantity > 1) {\r\n                        el.quantity -= 1;\r\n                        return el;\r\n                    }\r\n                }\r\n                else\r\n                    return el;\r\n            });\r\n\r\n            return { ...state, cart: current_cart };\r\n\r\n        default:\r\n            return INITIAL_STATE;\r\n    }\r\n}\r\n\r\nexport default shopReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport shopReducer from './Shopping/shopping-actions'\r\n\r\nconst rootReducer=combineReducers({\r\n    shop:shopReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store=createStore(rootReducer,composeWithDevTools());\r\n\r\nexport default store;","import React, { useState, useEffect } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass currentTotal extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.doTheMath=this.doTheMath.bind(this);\r\n    }\r\n       \r\n    doTheMath() {\r\n        let total = 0;\r\n        this.props.inTheCart.forEach(element => {\r\n            total += element.active * element.price;\r\n            // console.log(element);\r\n        });\r\n        return (<div>Total : {total}</div>);\r\n    }\r\n\r\n    render(){\r\n        // console.log(\"IN TOTAL:  \");\r\n        // console.log(this.props);       \r\n\r\n        return (this.doTheMath());\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        inTheCart: [...state.shop.cart]\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(currentTotal);","import React, { useState, useEffect, Component } from \"react\";\r\nimport details from \"./user-data.js\";\r\nimport { BrowserRouter,Switch, Route } from \"react-router-dom\";\r\nimport Cart from \"./DisplayCartSummary.js\";\r\nimport {createStore} from 'redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport {useDispatch ,useSelector} from \"react-redux\";\r\nimport {addThistocart,removeThisFromCart} from './redux/Shopping/shopping-reducers';\r\nimport store from \"./redux/store.js\";\r\nimport Axios from \"axios\";\r\nimport axios from \"axios\";\r\nimport CurrentTotal from \"./calculateTotal\";\r\n\r\nconst Shop = (items,cart_contents) => {\r\n\r\n     const dispatch=useDispatch();\r\n\r\n     cart_contents=items.cart_contents;\r\n     items=items.items;\r\n \r\n\r\n     const [listOfItems, setlistOfItems] = useState([]);\r\n\r\n     useEffect(async () => {\r\n          const result = await axios(\r\n               'http://localhost:3001/getProducts',\r\n          );\r\n          setlistOfItems(result.data);\r\n     }, []);\r\n\r\n     \r\n     const whichButton = (el) => {\r\n          \r\n          // ButtonDecider({el,cart_contents});\r\n          var flag=false;\r\n          cart_contents.forEach(element => {\r\n               flag=flag || (el.id === element.id && element.quantity > 0);\r\n          });\r\n\r\n          if(flag)\r\n          {\r\n               return cart_contents.map(element => {\r\n                    if (el.id === element.id && element.quantity > 0) {\r\n                        \r\n                         return (<div className=\"ButttonCART\">\r\n                              <button onClick={() => { store.dispatch(addThistocart(el)); }\r\n                              }>+</button>\r\n                              <a>{el.quantity}</a>\r\n                              <button onClick={() => {store.dispatch(removeThisFromCart(el.id));\r\n                              }}>-</button>\r\n                         </div>);\r\n                    }\r\n                    if(!flag)\r\n                    {\r\n                         return (<div className=\"ButtonCART\">\r\n                              <button onClick={() => {\r\n                                   store.dispatch(addThistocart(el));\r\n                              }}>ADD TO CART</button>\r\n                         </div>);\r\n                    }\r\n               });\r\n          }\r\n\r\n          return (<div className=\"ButtonCART\">\r\n               <button onClick={() => {store.dispatch(addThistocart(el));\r\n              }}>ADD TO CART</button>\r\n          </div>);\r\n     }\r\n\r\n     const whatIsTotal =() =>{\r\n\r\n          let tot=0;\r\n          cart_contents.forEach(element => {\r\n               tot+=element.quantity*element.price;\r\n          });\r\n\r\n          return <div>TOTAL :  {tot} </div>\r\n     }\r\n\r\n     return (\r\n          <div >\r\n               <div className=\"PROD\">\r\n                    {listOfItems.map((el) => (\r\n                         <div className=\"Box\" key={el.id}>\r\n                              <text>${el.price}</text>\r\n                              <img src={el.imglink} width=\"300px\" height=\"200px\" />\r\n                              {whichButton(el)}\r\n                         </div>\r\n                    ))}\r\n               </div>\r\n               \r\n               <div className=\"amountsTo\">\r\n                    {whatIsTotal()}\r\n               </div>\r\n\r\n               <div>\r\n                    <Link to={{\r\n                         pathname:\"/summary\",\r\n                         // props:cart\r\n                         }}>\r\n                         <button type=\"button\">\r\n                              SUMMARIZE\r\n                         </button>\r\n                    </Link>\r\n               </div>\r\n          </div>\r\n     );\r\n};\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n     // console.log(\"IN MAP STATE TO PROPS\");\r\n     // console.log(state);\r\n\r\n     return {\r\n          items:[...state.shop.product],\r\n          cart_contents:[...state.shop.cart]\r\n     }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Shop);\r\n","import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst AddingProductToList = () =>{\r\n\r\n    // const [productPrice,setProductPrice]=useState('');\r\n    // const [productID,setProductID]=useState('');\r\n    \r\n    // const sendPostRequest = () =>{\r\n    //     console.log(productID);\r\n    //     console.log(productName);\r\n    //     console.log(productPrice);\r\n\r\n    //     Axios.post(\"https://localhost:3001/insert\", {\r\n    //         prodId: productID, prodName: productName, prodPrice: productPrice\r\n    //     })\r\n    //         .then(() => {\r\n    //             console.log(\"POST REQUEST SENT\");\r\n    //         })\r\n    //         .catch(()=>{\r\n    //             console.log(\"UNABLE TO SEND POST REQUEST\");\r\n    //         });\r\n    // } // const [productName,setProductName]=useState('');\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h1>ADD PRODUCTS TO LIST</h1>\r\n            </div>\r\n            \r\n            <div className =\"INPUT FORM\">\r\n                {/* <label><h3>PRODUCT NAME</h3></label>\r\n                <input type=\"text\" onChange={(e)=>{\r\n                    setProductName(e.target.value);\r\n                }}></input>\r\n\r\n                <label><h3>PRODUCT PRICE</h3></label>\r\n                <input type=\"text\" onChange={(e)=>{\r\n                    setProductPrice(e.target.value);\r\n                }}></input>\r\n\r\n                <label><h3>PRODUCT ID</h3></label>\r\n                <input type=\"text\" onChange={(e)=>{\r\n                    setProductID(e.target.value);\r\n                }}></input> */}\r\n\r\n\r\n                <form action=\"http://localhost:3001/insert\" method=\"POST\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"ProductName\"><h3>TITLE</h3></label>\r\n                        <input class=\"form-control\" name=\"title\"/>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"Price\"><h3>PRICE</h3></label>\r\n                        <input class=\"form-control\" name=\"price\"/>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"ID\"><h3>ID</h3></label>\r\n                        <input class=\"form-control\" name=\"ID\"/>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"DESCRIPTION\"><h3>QUANTITY</h3></label>\r\n                        <input class=\"form-control\" name=\"quantity\"/>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"LINK\"><h3>IMAGE LINK</h3></label>\r\n                        <input class=\"form-control\" name=\"imgLink\"/>\r\n                    </div>\r\n\r\n                    \r\n                    <button class=\"btn btn-primary\"><h1>SUBMIT</h1></button>\r\n                </form>\r\n            </div>\r\n\r\n           {/* <div>\r\n               <button onClick={sendPostRequest}>SUBMIT</button>\r\n           </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddingProductToList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Component } from \"react\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst displayCount=(params)=>{\r\n\r\n    const checkOutCart=params.params;\r\n\r\n    let totalItems=0;\r\n\r\n    checkOutCart.forEach(element => {\r\n        totalItems+=element.active;\r\n    });\r\n\r\n    return (<div>\r\n        <h1> Demo E-Commerce </h1>\r\n        <p>Total Items in the Cart : {totalItems}</p>\r\n    </div>);\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        params:[...state.shop.cart]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(displayCount);","import React,{useState} from \"react\";\r\nimport details from \"./user-data\";\r\nimport './App.css';\r\nimport Shop from \"./Tile\";\r\nimport { Component } from \"react\";\r\nimport {BrowserRouter,Switch, Route} from 'react-router-dom';\r\nimport displayCart from \"./DisplayCartSummary\";\r\nimport {Link} from 'react-router-dom';\r\nimport HowManyInTheCart from \"./HowManyInTheCart\";\r\nimport currentTotal from \"./calculateTotal\";\r\nimport AddingProductToList from \"./addingProduct\";\r\n\r\nfunction App()\r\n{\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <div className=\"HEADING\">\r\n          <h1>DEMO E-Commerce</h1>\r\n        </div>\r\n        <Route path=\"/addProduct\" component={AddingProductToList}/>\r\n        <Route path=\"/\" exact component={Shop}/>\r\n        {/* <Route path=\"/\"  component={currentTotal}/> */}\r\n        <Route path=\"/summary\" component={displayCart} />\r\n      </div>\r\n    </BrowserRouter>\r\n  )\r\n};\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport store from \"./redux/store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n   <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}